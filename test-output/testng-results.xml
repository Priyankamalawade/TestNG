<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-18T07:45:17 GMT" name="Default suite" finished-at="2023-08-18T07:45:31 GMT" duration-ms="13864">
    <groups>
    </groups>
    <test started-at="2023-08-18T07:45:17 GMT" name="Default test" finished-at="2023-08-18T07:45:31 GMT" duration-ms="13864">
      <class name="testScripts.SampleTest">
        <test-method is-config="true" signature="setupExtent()[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:17 GMT" name="setupExtent" finished-at="2023-08-18T07:45:17 GMT" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtent -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:17 GMT" name="setUp" finished-at="2023-08-18T07:45:20 GMT" duration-ms="2592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchCucumberTest()[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:20 GMT" name="searchCucumberTest" finished-at="2023-08-18T07:45:25 GMT" duration-ms="4820" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Cucumber Tutorial - Google Search] but found [Cucumber Tutorials - Google Search]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Cucumber Tutorial - Google Search] but found [Cucumber Tutorials - Google Search]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testScripts.SampleTest.searchCucumberTest(SampleTest.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCucumberTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:25 GMT" name="tearDown" finished-at="2023-08-18T07:45:25 GMT" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCucumberTest status=FAILURE method=SampleTest.searchCucumberTest()[pri:0, instance:testScripts.SampleTest@52af26ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:25 GMT" name="setUp" finished-at="2023-08-18T07:45:26 GMT" duration-ms="1277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchCypressTest()[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:26 GMT" name="searchCypressTest" finished-at="2023-08-18T07:45:30 GMT" duration-ms="3966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCypressTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:30 GMT" name="tearDown" finished-at="2023-08-18T07:45:30 GMT" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCypressTest status=SUCCESS method=SampleTest.searchCypressTest()[pri:0, instance:testScripts.SampleTest@52af26ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="finishExtent()[pri:0, instance:testScripts.SampleTest@52af26ee]" started-at="2023-08-18T07:45:30 GMT" name="finishExtent" finished-at="2023-08-18T07:45:31 GMT" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishExtent -->
      </class> <!-- testScripts.SampleTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
